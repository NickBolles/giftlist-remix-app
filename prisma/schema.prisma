datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String  @id @default(cuid())
  email String  @unique
  name  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  lists    GiftList[]
  gifts    Gift[]     @relation("UserGifts")

  purchasedGifts Gift[] @relation("PurchasedGifts")
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model GiftList {
  id    String             @id @default(cuid())
  name  String
  gifts GiftsOnGiftLists[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Gift {
  id            String  @id @default(cuid())
  title         String
  notes         String?
  link          String?
  imageUrl      String?
  purchased     Boolean @default(false)
  purchasedBy   User?   @relation("PurchasedGifts", fields: [purchasedById], references: [id])
  purchasedById String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation("UserGifts", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  giftLists GiftsOnGiftLists[]
}

model GiftsOnGiftLists {
  gift       Gift     @relation(fields: [giftId], references: [id])
  giftId     String
  giftList   GiftList @relation(fields: [giftListId], references: [id])
  giftListId String
  assignedAt DateTime @default(now())

  @@id([giftId, giftListId])
}
